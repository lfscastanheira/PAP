{"ast":null,"code":"var _jsxFileName = \"/Users/lfscastanheira/Documents/GitHub/PAP/backoffice.v4/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { api } from \"../api/api\";\nimport { login as backendLogin } from '../../src/api/nova';\nimport cryptoJs from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState({});\n  const [notificationsAmount, setNotificationsAmount] = useState(\"\");\n  const isAuth = !!Object.keys(user).length;\n  const setUserData = userData => {\n    if (!userData) return;\n    setUser({\n      id: userData._id,\n      username: userData.username,\n      email: userData.email,\n      role: userData.role\n    });\n\n    //  api.get(`/messages/${userData._id}/unread_amount`).then((result) => {\n    //    setNotificationsAmount(result.data);\n    //  });\n  };\n\n  useState(() => {\n    setUserData(JSON.parse(localStorage.getItem(\"user\")));\n  }, []);\n  const login = async _ref2 => {\n    let {\n      userOrEmail,\n      password\n    } = _ref2;\n    setIsLoading(true);\n\n    // Criptografa a senha fornecida pelo usuário\n    const hashedPassword = JSON.stringify(cryptoJs.SHA256(password).words);\n    /* JSON.stringify(cryptoJs.SHA256(data.password).words) */\n\n    const result = await api.post(`/login`, {\n      userOrEmail,\n      password: password // Envia a senha criptografada para o backend\n    }).then(result => {\n      setUserData(result.data);\n      localStorage.setItem(\"user\", JSON.stringify(result.data));\n      return {\n        login: true\n      };\n    }).catch(e => {\n      if (e.response) return {\n        login: false,\n        message: e.response.data.error\n      };\n      return {\n        login: false,\n        message: e.message\n      };\n    });\n    setIsLoading(false);\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      isLoading,\n      user,\n      notificationsAmount,\n      isAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_s(AuthProvider, \"RyFaqoTFmRsNiFaNCBRK/JrpjBE=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","api","login","backendLogin","cryptoJs","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","isLoading","setIsLoading","user","setUser","notificationsAmount","setNotificationsAmount","isAuth","Object","keys","length","setUserData","userData","id","_id","username","email","role","JSON","parse","localStorage","getItem","_ref2","userOrEmail","password","hashedPassword","stringify","SHA256","words","result","post","then","data","setItem","catch","e","response","message","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lfscastanheira/Documents/GitHub/PAP/backoffice.v4/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { api } from \"../api/api\";\r\nimport { login as backendLogin } from '../../src/api/nova';\r\nimport cryptoJs from \"crypto-js\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [user, setUser] = useState({});\r\n\tconst [notificationsAmount, setNotificationsAmount] = useState(\"\");\r\n\tconst isAuth = !!Object.keys(user).length;\r\n\r\n\tconst setUserData = (userData) => {\r\n\t\tif (!userData) return;\r\n\r\n\t\tsetUser({\r\n\t\t\tid: userData._id,\r\n\t\t\tusername: userData.username,\r\n\t\t\temail: userData.email,\r\n\t\t\trole: userData.role,\r\n\t\t});\r\n\r\n\t\t//  api.get(`/messages/${userData._id}/unread_amount`).then((result) => {\r\n\t\t//    setNotificationsAmount(result.data);\r\n\t\t//  });\r\n\t};\r\n\r\n\tuseState(() => {\r\n\t\tsetUserData(JSON.parse(localStorage.getItem(\"user\")));\r\n\t}, []);\r\n\r\n\tconst login = async ({ userOrEmail, password }) => {\r\n\t\tsetIsLoading(true);\r\n\t\r\n\t\t// Criptografa a senha fornecida pelo usuário\r\n\t\tconst hashedPassword = JSON.stringify(cryptoJs.SHA256(password).words);\r\n\t\t/* JSON.stringify(cryptoJs.SHA256(data.password).words) */\r\n\t\r\n\t\tconst result = await api\r\n\t\t\t.post(`/login`, {\r\n\t\t\t\tuserOrEmail,\r\n\t\t\t\tpassword: password, // Envia a senha criptografada para o backend\r\n\t\t\t})\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetUserData(result.data);\r\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\r\n\t\t\t\treturn { login: true };\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tif (e.response) return { login: false, message: e.response.data.error };\r\n\t\t\t\treturn { login: false, message: e.message };\r\n\t\t\t});\r\n\t\r\n\t\tsetIsLoading(false);\r\n\t\treturn result;\r\n\t};\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tlogin,\r\n\t\t\t\tisLoading,\r\n\t\t\t\tuser,\r\n\t\t\t\tnotificationsAmount,\r\n\t\t\t\tisAuth,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}